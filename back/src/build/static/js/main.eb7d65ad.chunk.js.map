{"version":3,"sources":["components/Article.js","containers/ArticleListView.js","containers/ArticleDetailView.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","actions","Article_IconText","extra","width","alt","src","Meta","avatar","react_router_dom","to","concat","id","description","content","ArticleList","state","articles","_this2","this","axios","get","then","res","setState","results","Article","React","Component","ArticleDetail","article","articleID","match","params","card","BaseRouter","react_router","exact","path","component","Header","Layout","Content","Footer","CustomLayout","layout","className","menu","theme","mode","defaultSelectedKeys","lineHeight","padding","breadcrumb","margin","background","minHeight","children","textAlign","App","routes","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb7d65ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { List, Avatar, Icon } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst IconText = ({ type, text }) => (\r\n  <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text}\r\n  </span>\r\n);\r\n\r\nconst Articles = (props) =>{\r\n  return (\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        size=\"large\"\r\n        pagination={{\r\n          onChange: page => {\r\n            console.log(page);\r\n          },\r\n          pageSize: 3,\r\n        }}\r\n        dataSource={props.data}\r\n        footer={\r\n          <div>\r\n            <b>ant design</b> footer part\r\n          </div>\r\n        }\r\n        renderItem={item => (\r\n          <List.Item\r\n            key={item.title}\r\n            actions={[\r\n              <IconText type=\"star-o\" text=\"156\" />,\r\n              <IconText type=\"like-o\" text=\"156\" />,\r\n              <IconText type=\"message\" text=\"2\" />,\r\n            ]}\r\n            extra={\r\n              <img\r\n                width={272}\r\n                alt=\"logo\"\r\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n              />\r\n            }\r\n          >\r\n            <List.Item.Meta\r\n              avatar={<Avatar src={item.avatar} />}\r\n              title={<Link to={`/${item.id}`}>{item.title}</Link>}\r\n              description={item.description}\r\n            />\r\n            {item.content}\r\n          </List.Item>\r\n        )}\r\n      />\r\n  );\r\n}\r\n\r\nexport default Articles;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Articles from '../components/Article';\r\n\r\nclass ArticleList extends React.Component {\r\n\r\n  state = {\r\n    articles: []\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    axios.get(' http://127.0.0.1:8000/api/')\r\n      .then(res => {\r\n        this.setState({\r\n          articles: res.data.results\r\n        })\r\n        console.log(res.data);\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Articles data={this.state.articles} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ArticleList;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Card } from 'antd';\r\n\r\nclass ArticleDetail extends React.Component {\r\n\r\n  state = {\r\n    article: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const articleID = this.props.match.params.articleID;\r\n\r\n    axios.get(`http://127.0.0.1:8000/api/${articleID}`)\r\n      .then(res => {\r\n        this.setState({\r\n          article: res.data\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Card title={this.state.article.title}>\r\n        <p>{this.state.article.content}</p>\r\n      </Card> \r\n    )\r\n  }\r\n}\r\n\r\nexport default ArticleDetail;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport ArticleList from './containers/ArticleListView'\r\nimport ArticleDetail from './containers/ArticleDetailView'\r\n\r\nconst BaseRouter = () => (\r\n  <div>\r\n    <Route exact path='/' component={ArticleList} />\r\n    <Route exact path='/:articleID' component={ArticleDetail} />\r\n  </div>\r\n);\r\n\r\nexport default BaseRouter;","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst CustomLayout = (props) => {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['2']}\r\n            style={{ lineHeight: '64px' }}\r\n          >\r\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\r\n            <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\r\n            {props.children}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nexport default CustomLayout;","import React,{ Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\n\nimport CustomLayout from './containers/Layout';\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <CustomLayout>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}